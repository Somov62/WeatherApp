<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:fa="http://schemas.fontawesome.io/icons/">

    <Style x:Key="WindowNavButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource WindowNavBtnBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowNavBtnForeground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="6,4,6,6" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=Self}}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        CornerRadius="90"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource WindowNavBtnBackgroundMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource WindowNavBtnBackgroundPressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="{DynamicResource WindowNavBtnBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource MainForeground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Margin" Value="0,0,0,10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}"
                        CornerRadius="4">
                        <Grid
                            x:Name="Cog"
                            Background="Transparent"
                            Margin="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="22" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <fa:FontAwesome
                                Foreground="{DynamicResource MenuBtnForeground}"
                                FontSize="24"
                                VerticalAlignment="Center"
                                Icon="{Binding ContentStringFormat, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Grid.Column="1"
                                Margin="10,-5,0,-5"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="Center"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                TextBlock.FontSize="20" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource WindowNavBtnBackgroundMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false" />
                        <Trigger Property="IsPressed" Value="true" />
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" Value="{DynamicResource Accent}" />
                            <Setter Property="Foreground" Value="{DynamicResource WindowNavBtnBackground}" />
                            <Setter Property="FontWeight" Value="SemiBold" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ForecastPanelRadiButton" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="{DynamicResource WindowNavBtnBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Margin" Value="0,0,0,10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid Margin="5,0,5,0">
                        <Border
                            Name="shadow"
                            Background="White"
                            Margin="0,5"
                            CornerRadius="10"
                            Visibility="Hidden">
                            <Border.Effect>
                                <DropShadowEffect
                                    BlurRadius="6"
                                    Opacity="0.6"
                                    RenderingBias="Quality"
                                    ShadowDepth="3"
                                    Color="Black" />
                            </Border.Effect>
                        </Border>
                        <Border
                            Name="border"
                            Background="{TemplateBinding Background}"
                            Margin="0,5"
                            CornerRadius="10">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="shadow" Property="Visibility" Value="Visible" />
                            <Setter Property="Background" Value="{DynamicResource BackgroundGradient}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsChecked" Value="false" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource WindowNavBtnBackgroundMouseOver}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsChecked" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource WindowNavBtnBackgroundMouseOver}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="GraphicSelectorRbStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource MainForeground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="15,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border
                        Background="{TemplateBinding Background}"
                        Margin="{TemplateBinding Margin}"
                        CornerRadius="4">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="Center"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            TextBlock.FontSize="20"
                            TextBlock.Foreground="{TemplateBinding Foreground}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource WindowNavBtnBackgroundMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false" />
                        <Trigger Property="IsPressed" Value="true" />
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" Value="{DynamicResource Accent}" />
                            <Setter Property="Foreground" Value="{DynamicResource WindowNavBtnBackground}" />
                            <Setter Property="FontWeight" Value="SemiBold" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>